# Generated by Django 3.1 on 2021-02-05 10:35

from django.db import migrations, models
import django.db.models.deletion
import surveys.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.CharField(blank=True, max_length=300)),
                ('period', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='OfferedAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_text', models.CharField(max_length=300, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rut', models.CharField(blank=True, max_length=15)),
                ('nombres', models.CharField(blank=True, max_length=255)),
                ('apellido_paterno', models.CharField(blank=True, max_length=255)),
                ('apellido_materno', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.IntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Privileges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Egresado'), (3, 'Equipo Alumni'), (2, 'Corporativo UAI')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.CharField(max_length=300)),
                ('graph_type', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=300, unique=True)),
                ('type', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=300)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField()),
                ('is_activated', models.BooleanField(default=False)),
                ('csv_file', models.FileField(upload_to='surveys_csvs/', validators=[surveys.validators.validate_csv_file_extension])),
            ],
        ),
        migrations.CreateModel(
            name='SurveyCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SurveyQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.question')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.survey')),
            ],
            options={
                'unique_together': {('survey', 'question')},
            },
        ),
        migrations.CreateModel(
            name='SurveyQuestionAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offered_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.offeredanswer')),
                ('survey_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.surveyquestion')),
            ],
            options={
                'unique_together': {('survey_question', 'offered_answer')},
            },
        ),
        migrations.AddField(
            model_name='survey',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.surveycategory'),
        ),
        migrations.AddField(
            model_name='survey',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.faculty'),
        ),
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(blank=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.person')),
                ('survey_question_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.surveyquestionanswer')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyCareer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('career', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.career')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.survey')),
            ],
            options={
                'unique_together': {('survey', 'career')},
            },
        ),
        migrations.CreateModel(
            name='QuestionQuestionCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.questioncategory')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.question')),
            ],
            options={
                'unique_together': {('question', 'category')},
            },
        ),
        migrations.CreateModel(
            name='QuerySurveyQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.query')),
                ('survey_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.surveyquestion')),
            ],
            options={
                'unique_together': {('survey_question', 'query')},
            },
        ),
        migrations.CreateModel(
            name='PrivilegesQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privileges', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.privileges')),
                ('query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.query')),
            ],
            options={
                'unique_together': {('privileges', 'query')},
            },
        ),
        migrations.CreateModel(
            name='EquivalentQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eq_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eq_question', to='surveys.question')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question', to='surveys.question')),
            ],
            options={
                'unique_together': {('question', 'eq_question')},
            },
        ),
        migrations.CreateModel(
            name='DashboardQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.dashboard')),
                ('query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.query')),
            ],
            options={
                'unique_together': {('dashboard', 'query')},
            },
        ),
    ]
